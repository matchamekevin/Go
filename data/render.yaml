## Render Infrastructure Spec (Optional)
# Utilise ce fichier si tu veux que Render cr√©e les ressources automatiquement.
# IMPORTANT:
#  - Si tu fournis dockerfilePath: back/Dockerfile, NE mets PAS "Root Directory: back" dans l'UI.
#    (Sinon Render cherchera back/back/Dockerfile -> erreur vue dans tes logs.)
#  - Option A: Root Directory vide (repo racine) + dockerfilePath: back/Dockerfile  ‚úÖ
#  - Option B: Root Directory = back + dockerfilePath: Dockerfile (et alors retire 'back/' ici) ‚úÖ
#  - N'ajoute pas un second bloc 'services:' (le fichier pr√©c√©dent en avait deux -> YAML invalide).

services:
  - type: web
    name: gosotral-api
    env: docker
    plan: free
    repo: matchamekevin/Go
    branch: dev2
    dockerfilePath: back/Dockerfile  # changer en 'Dockerfile' si Root Directory = back
    envVars:
      - key: NODE_ENV
        value: production
      # Fournis soit DATABASE_URL, soit les variables DB_* correspondantes
      - key: DATABASE_URL
        value: $DATABASE_URL # d√©finir dans le dashboard (ou utiliser fromDatabase quand support√©)
      - key: PORT
        value: 7000
      - key: JWT_SECRET
        value: $JWT_SECRET
      - key: ADMIN_EMAIL
        value: $ADMIN_EMAIL
      - key: ADMIN_PASSWORD
        value: $ADMIN_PASSWORD
    healthCheckPath: /health
    # Force redeploy: fixed admin routes order - v5
    # Ajouter un d√©lai de d√©marrage pour permettre l'initialisation
    startCommand: "sh -c 'echo \"üöÄ D√©marrage de l\\'application SOTRAL...\" && (./diagnose-sotral.sh || echo \"‚ö†Ô∏è Diagnostic √©chou√©, continuation...\") && (./insert-stops.sh || echo \"‚ö†Ô∏è Insertion des arr√™ts √©chou√©e, continuation...\") && echo \"‚úÖ Scripts d\\'initialisation termin√©s\" && node dist/server.js'"

databases:
  - name: gosotral-db
    plan: free
    databaseName: gosotral_db
    user: gosotral_user
